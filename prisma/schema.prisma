// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)

  accounts      Account[]
  sessions      Session[]
  commandes     Commande[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Produit {
  id          String   @id @default(cuid())
  titre       String
  description String
  prix        Float
  image       String
  slug        String   @unique
  shopifyId   String?  // identifiant externe (facultatif)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  commandes   Commande[]
}

model Commande {
  id         String    @id @default(cuid())
  userId     String
  produitId  String
  quantite   Int       @default(1)
  total      Float
  statut     String    @default("en_attente")
  createdAt  DateTime  @default(now())

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  produit    Produit  @relation(fields: [produitId], references: [id], onDelete: Cascade)
}
